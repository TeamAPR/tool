{"general":{"NR_RIGHT_COMPILATIONS":174,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","OUTPUT_STATUS":"MAX_GENERATION","NR_FAILLING_COMPILATIONS":26,"NR_GENERATIONS":200,"TOTAL_TIME":680.331,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"NumOfDeleteMutations":"1","VARIANT_ID":"92","NumOfInsertMutations":"0","VALIDATION":"|true|0|3243|[]|","patchhunks":[{"LOCATION":"org.jfree.chart.plot.CategoryPlot","PATH":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/bugs\\\/chart\\\/chart_25\\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"0.408","INGREDIENT_PARENT":"this._List_0.size()","PATCH_HUNK_TYPE":"CtInvocationImpl|CtLocalVariableImpl","ORIGINAL_CODE":"renderer.getPassCount()","BUGGY_CODE_TYPE":"CtInvocationImpl|CtLocalVariableImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/APRTool\\\/astor\\\/.\\\/output_astor\\\/AstorMain-cardumen-chart_25\\\/\\\/src\\\/\\\/variant-92\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java","LINE":"2862","MP_RANKING":"436","PATCH_HUNK_CODE":"annotations.size()"}],"TIME":"165","FOLDER_SOLUTION_CODE":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/APRTool\\\/astor\\\/.\\\/output_astor\\\/AstorMain-cardumen-chart_25\\\/\\\/src\\\/\\\/variant-92","NumOfMut":"1","GENERATION":"46","NumOfReplaceMutations":"0","PatchDiff":"--- \\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java\\n+++ \\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java\\n@@ -2862 +2862 @@\\n-\\t\\t\\tint passCount = renderer.getPassCount();\\n+\\t\\t\\tint passCount = annotations.size();\\n\\n","PATCH_DIFF_ORIG":"--- \\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java\\n+++ \\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java\\n@@ -2862 +2862 @@\\n-\\t\\t\\tint passCount = renderer.getPassCount();\\n+\\t\\t\\tint passCount = annotations.size();\\n\\n","Tool":"CARDUMEN"},{"NumOfDeleteMutations":"1","VARIANT_ID":"226","NumOfInsertMutations":"0","VALIDATION":"|true|0|3243|[]|","patchhunks":[{"LOCATION":"org.jfree.data.KeyedObjects2D","PATH":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/bugs\\\/chart\\\/chart_25\\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"0.516","INGREDIENT_PARENT":"_int_0 < _int_1","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtIfImpl","ORIGINAL_CODE":"rowData != null","BUGGY_CODE_TYPE":"CtBinaryOperatorImpl|CtIfImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/APRTool\\\/astor\\\/.\\\/output_astor\\\/AstorMain-cardumen-chart_25\\\/\\\/src\\\/\\\/variant-226\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java","LINE":"110","MP_RANKING":"247","PATCH_HUNK_CODE":"row < row"}],"TIME":"393","FOLDER_SOLUTION_CODE":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/APRTool\\\/astor\\\/.\\\/output_astor\\\/AstorMain-cardumen-chart_25\\\/\\\/src\\\/\\\/variant-226","NumOfMut":"1","GENERATION":"113","NumOfReplaceMutations":"0","PatchDiff":"--- \\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java\\n+++ \\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java\\n@@ -110,7 +110,61 @@\\n-\\t\\tif (rowData != null) {\\n-\\t\\t\\tjava.lang.Comparable columnKey = ((java.lang.Comparable) (this.columnKeys.get(column)));\\n-\\t\\t\\tif (columnKey != null) {\\n-\\t\\t\\t\\tresult = rowData.getObject(columnKey);\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn result;\\n+\\t\\tif (\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n@@ -118 +171,0 @@\\n-\\t}\\n@@ -127,3 +179,0 @@\\n-\\tpublic java.lang.Comparable getRowKey(int row) {\\n-\\t\\treturn ((java.lang.Comparable) (this.rowKeys.get(row)));\\n-\\t}\\n@@ -138,3 +187,0 @@\\n-\\tpublic int getRowIndex(java.lang.Comparable key) {\\n-\\t\\treturn this.rowKeys.indexOf(key);\\n-\\t}\\n@@ -147,3 +193,0 @@\\n-\\tpublic java.util.List getRowKeys() {\\n-\\t\\treturn java.util.Collections.unmodifiableList(this.rowKeys);\\n-\\t}\\n@@ -158,3 +201,0 @@\\n-\\tpublic java.lang.Comparable getColumnKey(int column) {\\n-\\t\\treturn ((java.lang.Comparable) (this.columnKeys.get(column)));\\n-\\t}\\n@@ -169,3 +209,0 @@\\n-\\tpublic int getColumnIndex(java.lang.Comparable key) {\\n-\\t\\treturn this.columnKeys.indexOf(key);\\n-\\t}\\n@@ -178,3 +215,0 @@\\n-\\tpublic java.util.List getColumnKeys() {\\n-\\t\\treturn java.util.Collections.unmodifiableList(this.columnKeys);\\n-\\t}\\n@@ -190 +224,0 @@\\n-\\tpublic java.lang.Object getObject(java.lang.Comparable rowKey, java.lang.Comparable columnKey) {\\n@@ -192,7 +225,0 @@\\n-\\t\\tjava.lang.Object result = null;\\n-\\t\\tint row = this.rowKeys.indexOf(rowKey);\\n-\\t\\tif (row >= 0) {\\n-\\t\\t\\torg.jfree.data.KeyedObjects rowData = ((org.jfree.data.KeyedObjects) (this.rows.get(row)));\\n-\\t\\t\\tresult = rowData.getObject(columnKey);\\n-\\t\\t}\\n-\\t\\treturn result;\\n@@ -200 +226,0 @@\\n-\\t}\\n@@ -209,5 +234,0 @@\\n-\\tpublic void addObject(java.lang.Object object, \\n-\\tjava.lang.Comparable rowKey, \\n-\\tjava.lang.Comparable columnKey) {\\n-\\t\\tsetObject(object, rowKey, columnKey);\\n-\\t}\\n@@ -222,3 +242,0 @@\\n-\\tpublic void setObject(java.lang.Object object, \\n-\\tjava.lang.Comparable rowKey, \\n-\\tjava.lang.Comparable columnKey) {\\n@@ -226,15 +243,0 @@\\n-\\t\\torg.jfree.data.KeyedObjects row;\\n-\\t\\tint rowIndex = this.rowKeys.indexOf(rowKey);\\n-\\t\\tif (rowIndex >= 0) {\\n-\\t\\t\\trow = ((org.jfree.data.KeyedObjects) (this.rows.get(rowIndex)));\\n-\\t\\t} else \\n-\\t\\t{\\n-\\t\\t\\tthis.rowKeys.add(rowKey);\\n-\\t\\t\\trow = new org.jfree.data.KeyedObjects();\\n-\\t\\t\\tthis.rows.add(row);\\n-\\t\\t}\\n-\\t\\trow.setObject(columnKey, object);\\n-\\t\\tint columnIndex = this.columnKeys.indexOf(columnKey);\\n-\\t\\tif (columnIndex < 0) {\\n-\\t\\t\\tthis.columnKeys.add(columnKey);\\n-\\t\\t}\\n@@ -242 +244,0 @@\\n-\\t}\\n@@ -250,2 +251,0 @@\\n-\\tpublic void removeObject(java.lang.Comparable rowKey, java.lang.Comparable columnKey) {\\n-\\t\\tsetObject(null, rowKey, columnKey);\\n@@ -254 +253,0 @@\\n-\\t}\\n@@ -259,0 +259 @@\\n+\\t\\trow < row) { \\t\\t\\tjava.lang.Comparable columnKey = ((java.lang.Comparable) (this.columnKeys.get(column))); \\t\\t\\tif (columnKey != null) { \\t\\t\\t\\tresult = rowData.getObject(columnKey);}} \\t\\treturn result;} \\tpublic java.lang.Comparable getRowKey(int row) { \\t\\treturn ((java.lang.Comparable) (this.rowKeys.get(row)));} \\tpublic int getRowIndex(java.lang.Comparable key) { \\t\\treturn this.rowKeys.indexOf(key);} \\tpublic java.util.List getRowKeys() { \\t\\treturn java.util.Collections.unmodifiableList(this.rowKeys);} \\tpublic java.lang.Comparable getColumnKey(int column) { \\t\\treturn ((java.lang.Comparable) (this.columnKeys.get(column)));} \\tpublic int getColumnIndex(java.lang.Comparable key) { \\t\\treturn this.columnKeys.indexOf(key);} \\tpublic java.util.List getColumnKeys() { \\t\\treturn java.util.Collections.unmodifiableList(this.columnKeys);} \\tpublic java.lang.Object getObject(java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tjava.lang.Object result = null; \\t\\tint row = this.rowKeys.indexOf(rowKey); \\t\\tif (row >= 0) { \\t\\t\\torg.jfree.data.KeyedObjects rowData = ((org.jfree.data.KeyedObjects) (this.rows.get(row))); \\t\\t\\tresult = rowData.getObject(columnKey);} \\t\\treturn result;} \\tpublic void addObject(java.lang.Object object, java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tsetObject(object, rowKey, columnKey);} \\tpublic void setObject(java.lang.Object object, java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\torg.jfree.data.KeyedObjects row; \\t\\tint rowIndex = this.rowKeys.indexOf(rowKey); \\t\\tif (rowIndex >= 0) { \\t\\t\\trow = ((org.jfree.data.KeyedObjects) (this.rows.get(rowIndex)));} else { \\t\\t\\tthis.rowKeys.add(rowKey); \\t\\t\\trow = new org.jfree.data.KeyedObjects(); \\t\\t\\tthis.rows.add(row);} \\t\\trow.setObject(columnKey, object); \\t\\tint columnIndex = this.columnKeys.indexOf(columnKey); \\t\\tif (columnIndex < 0) { \\t\\t\\tthis.columnKeys.add(columnKey);}} \\tpublic void removeObject(java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tsetObject(null, rowKey, columnKey);}\\n\\n","PATCH_DIFF_ORIG":"--- \\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java\\n+++ \\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java\\n@@ -110,7 +110,61 @@\\n-\\t\\tif (rowData != null) {\\n-\\t\\t\\tjava.lang.Comparable columnKey = ((java.lang.Comparable) (this.columnKeys.get(column)));\\n-\\t\\t\\tif (columnKey != null) {\\n-\\t\\t\\t\\tresult = rowData.getObject(columnKey);\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn result;\\n+\\t\\tif (\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n@@ -118 +171,0 @@\\n-\\t}\\n@@ -127,3 +179,0 @@\\n-\\tpublic java.lang.Comparable getRowKey(int row) {\\n-\\t\\treturn ((java.lang.Comparable) (this.rowKeys.get(row)));\\n-\\t}\\n@@ -138,3 +187,0 @@\\n-\\tpublic int getRowIndex(java.lang.Comparable key) {\\n-\\t\\treturn this.rowKeys.indexOf(key);\\n-\\t}\\n@@ -147,3 +193,0 @@\\n-\\tpublic java.util.List getRowKeys() {\\n-\\t\\treturn java.util.Collections.unmodifiableList(this.rowKeys);\\n-\\t}\\n@@ -158,3 +201,0 @@\\n-\\tpublic java.lang.Comparable getColumnKey(int column) {\\n-\\t\\treturn ((java.lang.Comparable) (this.columnKeys.get(column)));\\n-\\t}\\n@@ -169,3 +209,0 @@\\n-\\tpublic int getColumnIndex(java.lang.Comparable key) {\\n-\\t\\treturn this.columnKeys.indexOf(key);\\n-\\t}\\n@@ -178,3 +215,0 @@\\n-\\tpublic java.util.List getColumnKeys() {\\n-\\t\\treturn java.util.Collections.unmodifiableList(this.columnKeys);\\n-\\t}\\n@@ -190 +224,0 @@\\n-\\tpublic java.lang.Object getObject(java.lang.Comparable rowKey, java.lang.Comparable columnKey) {\\n@@ -192,7 +225,0 @@\\n-\\t\\tjava.lang.Object result = null;\\n-\\t\\tint row = this.rowKeys.indexOf(rowKey);\\n-\\t\\tif (row >= 0) {\\n-\\t\\t\\torg.jfree.data.KeyedObjects rowData = ((org.jfree.data.KeyedObjects) (this.rows.get(row)));\\n-\\t\\t\\tresult = rowData.getObject(columnKey);\\n-\\t\\t}\\n-\\t\\treturn result;\\n@@ -200 +226,0 @@\\n-\\t}\\n@@ -209,5 +234,0 @@\\n-\\tpublic void addObject(java.lang.Object object, \\n-\\tjava.lang.Comparable rowKey, \\n-\\tjava.lang.Comparable columnKey) {\\n-\\t\\tsetObject(object, rowKey, columnKey);\\n-\\t}\\n@@ -222,3 +242,0 @@\\n-\\tpublic void setObject(java.lang.Object object, \\n-\\tjava.lang.Comparable rowKey, \\n-\\tjava.lang.Comparable columnKey) {\\n@@ -226,15 +243,0 @@\\n-\\t\\torg.jfree.data.KeyedObjects row;\\n-\\t\\tint rowIndex = this.rowKeys.indexOf(rowKey);\\n-\\t\\tif (rowIndex >= 0) {\\n-\\t\\t\\trow = ((org.jfree.data.KeyedObjects) (this.rows.get(rowIndex)));\\n-\\t\\t} else \\n-\\t\\t{\\n-\\t\\t\\tthis.rowKeys.add(rowKey);\\n-\\t\\t\\trow = new org.jfree.data.KeyedObjects();\\n-\\t\\t\\tthis.rows.add(row);\\n-\\t\\t}\\n-\\t\\trow.setObject(columnKey, object);\\n-\\t\\tint columnIndex = this.columnKeys.indexOf(columnKey);\\n-\\t\\tif (columnIndex < 0) {\\n-\\t\\t\\tthis.columnKeys.add(columnKey);\\n-\\t\\t}\\n@@ -242 +244,0 @@\\n-\\t}\\n@@ -250,2 +251,0 @@\\n-\\tpublic void removeObject(java.lang.Comparable rowKey, java.lang.Comparable columnKey) {\\n-\\t\\tsetObject(null, rowKey, columnKey);\\n@@ -254 +253,0 @@\\n-\\t}\\n@@ -259,0 +259 @@\\n+\\t\\trow < row) { \\t\\t\\tjava.lang.Comparable columnKey = ((java.lang.Comparable) (this.columnKeys.get(column))); \\t\\t\\tif (columnKey != null) { \\t\\t\\t\\tresult = rowData.getObject(columnKey);}} \\t\\treturn result;} \\tpublic java.lang.Comparable getRowKey(int row) { \\t\\treturn ((java.lang.Comparable) (this.rowKeys.get(row)));} \\tpublic int getRowIndex(java.lang.Comparable key) { \\t\\treturn this.rowKeys.indexOf(key);} \\tpublic java.util.List getRowKeys() { \\t\\treturn java.util.Collections.unmodifiableList(this.rowKeys);} \\tpublic java.lang.Comparable getColumnKey(int column) { \\t\\treturn ((java.lang.Comparable) (this.columnKeys.get(column)));} \\tpublic int getColumnIndex(java.lang.Comparable key) { \\t\\treturn this.columnKeys.indexOf(key);} \\tpublic java.util.List getColumnKeys() { \\t\\treturn java.util.Collections.unmodifiableList(this.columnKeys);} \\tpublic java.lang.Object getObject(java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tjava.lang.Object result = null; \\t\\tint row = this.rowKeys.indexOf(rowKey); \\t\\tif (row >= 0) { \\t\\t\\torg.jfree.data.KeyedObjects rowData = ((org.jfree.data.KeyedObjects) (this.rows.get(row))); \\t\\t\\tresult = rowData.getObject(columnKey);} \\t\\treturn result;} \\tpublic void addObject(java.lang.Object object, java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tsetObject(object, rowKey, columnKey);} \\tpublic void setObject(java.lang.Object object, java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\torg.jfree.data.KeyedObjects row; \\t\\tint rowIndex = this.rowKeys.indexOf(rowKey); \\t\\tif (rowIndex >= 0) { \\t\\t\\trow = ((org.jfree.data.KeyedObjects) (this.rows.get(rowIndex)));} else { \\t\\t\\tthis.rowKeys.add(rowKey); \\t\\t\\trow = new org.jfree.data.KeyedObjects(); \\t\\t\\tthis.rows.add(row);} \\t\\trow.setObject(columnKey, object); \\t\\tint columnIndex = this.columnKeys.indexOf(columnKey); \\t\\tif (columnIndex < 0) { \\t\\t\\tthis.columnKeys.add(columnKey);}} \\tpublic void removeObject(java.lang.Comparable rowKey, java.lang.Comparable columnKey) { \\t\\tsetObject(null, rowKey, columnKey);}\\n\\n","Tool":"CARDUMEN"},{"NumOfDeleteMutations":"1","VARIANT_ID":"244","NumOfInsertMutations":"0","VALIDATION":"|true|0|3243|[]|","patchhunks":[{"LOCATION":"org.jfree.data.KeyedObjects2D","PATH":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/bugs\\\/chart\\\/chart_25\\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"0.447","INGREDIENT_PARENT":"this._Object_0 instanceof org.jfree.chart.util.PublicCloneable","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtIfImpl","ORIGINAL_CODE":"columnIndex < 0","BUGGY_CODE_TYPE":"CtBinaryOperatorImpl|CtIfImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/APRTool\\\/astor\\\/.\\\/output_astor\\\/AstorMain-cardumen-chart_25\\\/\\\/src\\\/\\\/variant-244\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java","LINE":"238","MP_RANKING":"333","PATCH_HUNK_CODE":"columnKey instanceof org.jfree.chart.util.PublicCloneable"}],"TIME":"426","FOLDER_SOLUTION_CODE":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/APRTool\\\/astor\\\/.\\\/output_astor\\\/AstorMain-cardumen-chart_25\\\/\\\/src\\\/\\\/variant-244","NumOfMut":"1","GENERATION":"122","NumOfReplaceMutations":"0","PatchDiff":"--- \\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java\\n+++ \\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java\\n@@ -238 +238 @@\\n-\\t\\tif (columnIndex < 0) {\\n+\\t\\tif (columnKey instanceof org.jfree.chart.util.PublicCloneable) {\\n\\n","PATCH_DIFF_ORIG":"--- \\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java\\n+++ \\\/source\\\/org\\\/jfree\\\/data\\\/KeyedObjects2D.java\\n@@ -238 +238 @@\\n-\\t\\tif (columnIndex < 0) {\\n+\\t\\tif (columnKey instanceof org.jfree.chart.util.PublicCloneable) {\\n\\n","Tool":"CARDUMEN"},{"NumOfDeleteMutations":"1","VARIANT_ID":"356","NumOfInsertMutations":"0","VALIDATION":"|true|0|3243|[]|","patchhunks":[{"LOCATION":"org.jfree.chart.plot.CategoryPlot","PATH":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/bugs\\\/chart\\\/chart_25\\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"0.378","INGREDIENT_PARENT":"(_Paint_0 != null)","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtLocalVariableImpl","ORIGINAL_CODE":"area.getWidth() <= org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW","BUGGY_CODE_TYPE":"CtBinaryOperatorImpl|CtLocalVariableImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/APRTool\\\/astor\\\/.\\\/output_astor\\\/AstorMain-cardumen-chart_25\\\/\\\/src\\\/\\\/variant-356\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java","LINE":"2558","MP_RANKING":"691","PATCH_HUNK_CODE":"rangeGridlinePaint != null"}],"TIME":"611","FOLDER_SOLUTION_CODE":"\\\/Users\\\/georgecherian\\\/Desktop\\\/TSE\\\/APRTool\\\/astor\\\/.\\\/output_astor\\\/AstorMain-cardumen-chart_25\\\/\\\/src\\\/\\\/variant-356","NumOfMut":"1","GENERATION":"178","NumOfReplaceMutations":"0","PatchDiff":"--- \\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java\\n+++ \\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java\\n@@ -2558,5 +2558 @@\\n-\\t\\tboolean b1 = area.getWidth() <= org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW;\\n-\\t\\tboolean b2 = area.getHeight() <= org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW;\\n-\\t\\tif (b1 || b2) {\\n-\\t\\t\\treturn;\\n-\\t\\t}\\n+\\t\\tboolean b1 = \\n@@ -2565 +2560,0 @@\\n-\\t\\tif (state == null) {\\n@@ -2569,3 +2563,0 @@\\n-\\t\\t\\tstate = new org.jfree.chart.plot.PlotRenderingInfo(null);\\n-\\t\\t}\\n-\\t\\tstate.setPlotArea(area);\\n@@ -2574,2 +2565,0 @@\\n-\\t\\torg.jfree.chart.util.RectangleInsets insets = getInsets();\\n-\\t\\tinsets.trim(area);\\n@@ -2578,3 +2567,0 @@\\n-\\t\\torg.jfree.chart.axis.AxisSpace space = calculateAxisSpace(g2, area);\\n-\\t\\tjava.awt.geom.Rectangle2D dataArea = space.shrink(area, null);\\n-\\t\\tthis.axisOffset.trim(dataArea);\\n@@ -2582 +2568,0 @@\\n-\\t\\tstate.setDataArea(dataArea);\\n@@ -2586,6 +2571,0 @@\\n-\\t\\tif (getRenderer() != null) {\\n-\\t\\t\\tgetRenderer().drawBackground(g2, this, dataArea);\\n-\\t\\t} else \\n-\\t\\t{\\n-\\t\\t\\tdrawBackground(g2, dataArea);\\n-\\t\\t}\\n@@ -2593 +2572,0 @@\\n-\\t\\tjava.util.Map axisStateMap = drawAxes(g2, area, dataArea, state);\\n@@ -2596,2 +2574,0 @@\\n-\\t\\tjava.awt.Shape savedClip = g2.getClip();\\n-\\t\\tg2.clip(dataArea);\\n@@ -2599 +2575,0 @@\\n-\\t\\tdrawDomainGridlines(g2, dataArea);\\n@@ -2601,10 +2576,0 @@\\n-\\t\\torg.jfree.chart.axis.AxisState rangeAxisState = ((org.jfree.chart.axis.AxisState) (axisStateMap.get(getRangeAxis())));\\n-\\t\\tif (rangeAxisState == null) {\\n-\\t\\t\\tif (parentState != null) {\\n-\\t\\t\\t\\trangeAxisState = ((org.jfree.chart.axis.AxisState) (parentState.getSharedAxisStates().get(\\n-\\t\\t\\t\\tgetRangeAxis())));\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tif (rangeAxisState != null) {\\n-\\t\\t\\tdrawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());\\n-\\t\\t}\\n@@ -2613,6 +2578,0 @@\\n-\\t\\tfor (int i = 0; i < this.renderers.size(); i++) {\\n-\\t\\t\\tdrawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);\\n-\\t\\t}\\n-\\t\\tfor (int i = 0; i < this.renderers.size(); i++) {\\n-\\t\\t\\tdrawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);\\n-\\t\\t}\\n@@ -2621 +2580,0 @@\\n-\\t\\tboolean foundData = false;\\n@@ -2624,3 +2582,0 @@\\n-\\t\\tjava.awt.Composite originalComposite = g2.getComposite();\\n-\\t\\tg2.setComposite(java.awt.AlphaComposite.getInstance(\\n-\\t\\tjava.awt.AlphaComposite.SRC_OVER, getForegroundAlpha()));\\n@@ -2628,2 +2583,0 @@\\n-\\t\\torg.jfree.chart.plot.DatasetRenderingOrder order = getDatasetRenderingOrder();\\n-\\t\\tif (order == org.jfree.chart.plot.DatasetRenderingOrder.FORWARD) {\\n@@ -2632,10 +2585,0 @@\\n-\\t\\t\\tint datasetCount = this.datasets.size();\\n-\\t\\t\\tfor (int i = 0; i < datasetCount; i++) {\\n-\\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);\\n-\\t\\t\\t\\tif (r != null) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);\\n-\\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, \\n-\\t\\t\\t\\t\\torg.jfree.chart.util.Layer.BACKGROUND, state);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n@@ -2643,3 +2586,0 @@\\n-\\t\\t\\tfor (int i = 0; i < datasetCount; i++) {\\n-\\t\\t\\t\\tfoundData = render(g2, dataArea, i, state) || foundData;\\n-\\t\\t\\t}\\n@@ -2648,11 +2588,0 @@\\n-\\t\\t\\tfor (int i = 0; i < datasetCount; i++) {\\n-\\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);\\n-\\t\\t\\t\\tif (r != null) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);\\n-\\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, \\n-\\t\\t\\t\\t\\torg.jfree.chart.util.Layer.FOREGROUND, state);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t} else \\n-\\t\\t{\\n@@ -2661,10 +2590,0 @@\\n-\\t\\t\\tint datasetCount = this.datasets.size();\\n-\\t\\t\\tfor (int i = datasetCount - 1; i >= 0; i--) {\\n-\\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);\\n-\\t\\t\\t\\tif (r != null) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);\\n-\\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, \\n-\\t\\t\\t\\t\\torg.jfree.chart.util.Layer.BACKGROUND, state);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n@@ -2672,3 +2591,0 @@\\n-\\t\\t\\tfor (int i = this.datasets.size() - 1; i >= 0; i--) {\\n-\\t\\t\\t\\tfoundData = render(g2, dataArea, i, state) || foundData;\\n-\\t\\t\\t}\\n@@ -2677,10 +2593,0 @@\\n-\\t\\t\\tfor (int i = datasetCount - 1; i >= 0; i--) {\\n-\\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);\\n-\\t\\t\\t\\tif (r != null) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);\\n-\\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, \\n-\\t\\t\\t\\t\\torg.jfree.chart.util.Layer.FOREGROUND, state);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n@@ -2689,6 +2595,0 @@\\n-\\t\\tfor (int i = 0; i < this.renderers.size(); i++) {\\n-\\t\\t\\tdrawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.FOREGROUND);\\n-\\t\\t}\\n-\\t\\tfor (int i = 0; i < this.renderers.size(); i++) {\\n-\\t\\t\\tdrawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.FOREGROUND);\\n-\\t\\t}\\n@@ -2697 +2597,0 @@\\n-\\t\\tdrawAnnotations(g2, dataArea, state);\\n@@ -2699,2 +2598,0 @@\\n-\\t\\tg2.setClip(savedClip);\\n-\\t\\tg2.setComposite(originalComposite);\\n@@ -2702,3 +2599,0 @@\\n-\\t\\tif (!foundData) {\\n-\\t\\t\\tdrawNoDataMessage(g2, dataArea);\\n-\\t\\t}\\n@@ -2707 +2601,0 @@\\n-\\t\\tif (isRangeCrosshairVisible()) {\\n@@ -2709,4 +2602,0 @@\\n-\\t\\t\\tdrawRangeCrosshair(g2, dataArea, getOrientation(), \\n-\\t\\t\\tgetRangeCrosshairValue(), getRangeAxis(), \\n-\\t\\t\\tgetRangeCrosshairStroke(), getRangeCrosshairPaint());\\n-\\t\\t}\\n@@ -2715,6 +2604,0 @@\\n-\\t\\tif (getRenderer() != null) {\\n-\\t\\t\\tgetRenderer().drawOutline(g2, this, dataArea);\\n-\\t\\t} else \\n-\\t\\t{\\n-\\t\\t\\tdrawOutline(g2, dataArea);\\n-\\t\\t}\\n@@ -2722 +2605,0 @@\\n-\\t}\\n@@ -2734,4 +2616,0 @@\\n-\\tpublic void drawBackground(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D area) {\\n-\\t\\tfillBackground(g2, area, this.orientation);\\n-\\t\\tdrawBackgroundImage(g2, area);\\n-\\t}\\n@@ -2750,4 +2628,0 @@\\n-\\tprotected java.util.Map drawAxes(java.awt.Graphics2D g2, \\n-\\tjava.awt.geom.Rectangle2D plotArea, \\n-\\tjava.awt.geom.Rectangle2D dataArea, \\n-\\torg.jfree.chart.plot.PlotRenderingInfo plotState) {\\n@@ -2755 +2629,0 @@\\n-\\t\\torg.jfree.chart.axis.AxisCollection axisCollection = new org.jfree.chart.axis.AxisCollection();\\n@@ -2758,6 +2631,0 @@\\n-\\t\\tfor (int index = 0; index < this.domainAxes.size(); index++) {\\n-\\t\\t\\torg.jfree.chart.axis.CategoryAxis xAxis = ((org.jfree.chart.axis.CategoryAxis) (this.domainAxes.get(index)));\\n-\\t\\t\\tif (xAxis != null) {\\n-\\t\\t\\t\\taxisCollection.add(xAxis, getDomainAxisEdge(index));\\n-\\t\\t\\t}\\n-\\t\\t}\\n@@ -2766,6 +2633,0 @@\\n-\\t\\tfor (int index = 0; index < this.rangeAxes.size(); index++) {\\n-\\t\\t\\torg.jfree.chart.axis.ValueAxis yAxis = ((org.jfree.chart.axis.ValueAxis) (this.rangeAxes.get(index)));\\n-\\t\\t\\tif (yAxis != null) {\\n-\\t\\t\\t\\taxisCollection.add(yAxis, getRangeAxisEdge(index));\\n-\\t\\t\\t}\\n-\\t\\t}\\n@@ -2773 +2634,0 @@\\n-\\t\\tjava.util.Map axisStateMap = new java.util.HashMap();\\n@@ -2776,12 +2636,0 @@\\n-\\t\\tdouble cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\\n-\\t\\tdataArea.getHeight());\\n-\\t\\tjava.util.Iterator iterator = axisCollection.getAxesAtTop().iterator();\\n-\\t\\twhile (iterator.hasNext()) {\\n-\\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next()));\\n-\\t\\t\\tif (axis != null) {\\n-\\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \\n-\\t\\t\\t\\torg.jfree.chart.util.RectangleEdge.TOP, plotState);\\n-\\t\\t\\t\\tcursor = axisState.getCursor();\\n-\\t\\t\\t\\taxisStateMap.put(axis, axisState);\\n-\\t\\t\\t}\\n-\\t\\t} \\n@@ -2790,12 +2638,0 @@\\n-\\t\\tcursor = dataArea.getMaxY() + \\n-\\t\\tthis.axisOffset.calculateBottomOutset(dataArea.getHeight());\\n-\\t\\titerator = axisCollection.getAxesAtBottom().iterator();\\n-\\t\\twhile (iterator.hasNext()) {\\n-\\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next()));\\n-\\t\\t\\tif (axis != null) {\\n-\\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \\n-\\t\\t\\t\\torg.jfree.chart.util.RectangleEdge.BOTTOM, plotState);\\n-\\t\\t\\t\\tcursor = axisState.getCursor();\\n-\\t\\t\\t\\taxisStateMap.put(axis, axisState);\\n-\\t\\t\\t}\\n-\\t\\t} \\n@@ -2804,12 +2640,0 @@\\n-\\t\\tcursor = dataArea.getMinX() - \\n-\\t\\tthis.axisOffset.calculateLeftOutset(dataArea.getWidth());\\n-\\t\\titerator = axisCollection.getAxesAtLeft().iterator();\\n-\\t\\twhile (iterator.hasNext()) {\\n-\\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next()));\\n-\\t\\t\\tif (axis != null) {\\n-\\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \\n-\\t\\t\\t\\torg.jfree.chart.util.RectangleEdge.LEFT, plotState);\\n-\\t\\t\\t\\tcursor = axisState.getCursor();\\n-\\t\\t\\t\\taxisStateMap.put(axis, axisState);\\n-\\t\\t\\t}\\n-\\t\\t} \\n@@ -2818,12 +2642,0 @@\\n-\\t\\tcursor = dataArea.getMaxX() + \\n-\\t\\tthis.axisOffset.calculateRightOutset(dataArea.getWidth());\\n-\\t\\titerator = axisCollection.getAxesAtRight().iterator();\\n-\\t\\twhile (iterator.hasNext()) {\\n-\\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next()));\\n-\\t\\t\\tif (axis != null) {\\n-\\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \\n-\\t\\t\\t\\torg.jfree.chart.util.RectangleEdge.RIGHT, plotState);\\n-\\t\\t\\t\\tcursor = axisState.getCursor();\\n-\\t\\t\\t\\taxisStateMap.put(axis, axisState);\\n-\\t\\t\\t}\\n-\\t\\t} \\n@@ -2831 +2643,0 @@\\n-\\t\\treturn axisStateMap;\\n@@ -2833 +2644,0 @@\\n-\\t}\\n@@ -2846,2 +2656,0 @@\\n-\\tpublic boolean render(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D dataArea, int index, \\n-\\torg.jfree.chart.plot.PlotRenderingInfo info) {\\n@@ -2849,54 +2657,0 @@\\n-\\t\\tboolean foundData = false;\\n-\\t\\torg.jfree.data.category.CategoryDataset currentDataset = getDataset(index);\\n-\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer renderer = getRenderer(index);\\n-\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(index);\\n-\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(index);\\n-\\t\\tboolean hasData = !org.jfree.data.general.DatasetUtilities.isEmptyOrNull(currentDataset);\\n-\\t\\tif (hasData && (renderer != null)) {\\n-\\n-\\t\\t\\tfoundData = true;\\n-\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, \\n-\\t\\t\\tthis, index, info);\\n-\\t\\t\\tint columnCount = currentDataset.getColumnCount();\\n-\\t\\t\\tint rowCount = currentDataset.getRowCount();\\n-\\t\\t\\tint passCount = renderer.getPassCount();\\n-\\t\\t\\tfor (int pass = 0; pass < passCount; pass++) {\\n-\\t\\t\\t\\tif (this.columnRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) {\\n-\\t\\t\\t\\t\\tfor (int column = 0; column < columnCount; column++) {\\n-\\t\\t\\t\\t\\t\\tif (this.rowRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) {\\n-\\t\\t\\t\\t\\t\\t\\tfor (int row = 0; row < rowCount; row++) {\\n-\\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, \\n-\\t\\t\\t\\t\\t\\t\\t\\tdomainAxis, rangeAxis, currentDataset, \\n-\\t\\t\\t\\t\\t\\t\\t\\trow, column, pass);\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\t\\t\\tfor (int row = rowCount - 1; row >= 0; row--) {\\n-\\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, \\n-\\t\\t\\t\\t\\t\\t\\t\\tdomainAxis, rangeAxis, currentDataset, \\n-\\t\\t\\t\\t\\t\\t\\t\\trow, column, pass);\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\tfor (int column = columnCount - 1; column >= 0; column--) {\\n-\\t\\t\\t\\t\\t\\tif (this.rowRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) {\\n-\\t\\t\\t\\t\\t\\t\\tfor (int row = 0; row < rowCount; row++) {\\n-\\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, \\n-\\t\\t\\t\\t\\t\\t\\t\\tdomainAxis, rangeAxis, currentDataset, \\n-\\t\\t\\t\\t\\t\\t\\t\\trow, column, pass);\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\t\\t\\tfor (int row = rowCount - 1; row >= 0; row--) {\\n-\\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, \\n-\\t\\t\\t\\t\\t\\t\\t\\tdomainAxis, rangeAxis, currentDataset, \\n-\\t\\t\\t\\t\\t\\t\\t\\trow, column, pass);\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn foundData;\\n@@ -2904 +2658,0 @@\\n-\\t}\\n@@ -2914 +2667,0 @@\\n-\\tprotected void drawDomainGridlines(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D dataArea) {\\n@@ -2917,6 +2670,253 @@\\n-\\t\\tif (isDomainGridlinesVisible()) {\\n-\\t\\t\\torg.jfree.chart.axis.CategoryAnchor anchor = getDomainGridlinePosition();\\n-\\t\\t\\torg.jfree.chart.util.RectangleEdge domainAxisEdge = getDomainAxisEdge();\\n-\\t\\t\\tjava.awt.Stroke gridStroke = getDomainGridlineStroke();\\n-\\t\\t\\tjava.awt.Paint gridPaint = getDomainGridlinePaint();\\n-\\t\\t\\tif ((gridStroke != null) && (gridPaint != null)) {\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\trangeGridlinePaint != null; \\t\\tboolean b2 = area.getHeight() <= org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW; \\t\\tif (b1 || b2) { \\t\\t\\treturn;} \\t\\tif (state == null) { \\t\\t\\tstate = new org.jfree.chart.plot.PlotRenderingInfo(null);} \\t\\tstate.setPlotArea(area); \\t\\torg.jfree.chart.util.RectangleInsets insets = getInsets(); \\t\\tinsets.trim(area); \\t\\torg.jfree.chart.axis.AxisSpace space = calculateAxisSpace(g2, area); \\t\\tjava.awt.geom.Rectangle2D dataArea = space.shrink(area, null); \\t\\tthis.axisOffset.trim(dataArea); \\t\\tstate.setDataArea(dataArea); \\t\\tif (getRenderer() != null) { \\t\\t\\tgetRenderer().drawBackground(g2, this, dataArea);} else { \\t\\t\\tdrawBackground(g2, dataArea);} \\t\\tjava.util.Map axisStateMap = drawAxes(g2, area, dataArea, state); \\t\\tjava.awt.Shape savedClip = g2.getClip(); \\t\\tg2.clip(dataArea); \\t\\tdrawDomainGridlines(g2, dataArea); \\t\\torg.jfree.chart.axis.AxisState rangeAxisState = ((org.jfree.chart.axis.AxisState) (axisStateMap.get(getRangeAxis()))); \\t\\tif (rangeAxisState == null) { \\t\\t\\tif (parentState != null) { \\t\\t\\t\\trangeAxisState = ((org.jfree.chart.axis.AxisState) (parentState.getSharedAxisStates().get(getRangeAxis())));}} \\t\\tif (rangeAxisState != null) { \\t\\t\\tdrawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());} \\t\\tfor (int i = 0; i < this.renderers.size(); i++) { \\t\\t\\tdrawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);} \\t\\tfor (int i = 0; i < this.renderers.size(); i++) { \\t\\t\\tdrawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);} \\t\\tboolean foundData = false; \\t\\tjava.awt.Composite originalComposite = g2.getComposite(); \\t\\tg2.setComposite(java.awt.AlphaComposite.getInstance(java.awt.AlphaComposite.SRC_OVER, getForegroundAlpha())); \\t\\torg.jfree.chart.plot.DatasetRenderingOrder order = getDatasetRenderingOrder(); \\t\\tif (order == org.jfree.chart.plot.DatasetRenderingOrder.FORWARD) { \\t\\t\\tint datasetCount = this.datasets.size(); \\t\\t\\tfor (int i = 0; i < datasetCount; i++) { \\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i); \\t\\t\\t\\tif (r != null) { \\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i); \\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i); \\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);}} \\t\\t\\tfor (int i = 0; i < datasetCount; i++) { \\t\\t\\t\\tfoundData = render(g2, dataArea, i, state) || foundData;} \\t\\t\\tfor (int i = 0; i < datasetCount; i++) { \\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i); \\t\\t\\t\\tif (r != null) { \\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i); \\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i); \\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);}}} else { \\t\\t\\tint datasetCount = this.datasets.size(); \\t\\t\\tfor (int i = datasetCount - 1; i >= 0; i--) { \\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i); \\t\\t\\t\\tif (r != null) { \\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i); \\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i); \\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);}} \\t\\t\\tfor (int i = this.datasets.size() - 1; i >= 0; i--) { \\t\\t\\t\\tfoundData = render(g2, dataArea, i, state) || foundData;} \\t\\t\\tfor (int i = datasetCount - 1; i >= 0; i--) { \\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i); \\t\\t\\t\\tif (r != null) { \\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i); \\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i); \\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);}}} \\t\\tfor (int i = 0; i < this.renderers.size(); i++) { \\t\\t\\tdrawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.FOREGROUND);} \\t\\tfor (int i = 0; i < this.renderers.size(); i++) { \\t\\t\\tdrawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.FOREGROUND);} \\t\\tdrawAnnotations(g2, dataArea, state); \\t\\tg2.setClip(savedClip); \\t\\tg2.setComposite(originalComposite); \\t\\tif (!foundData) { \\t\\t\\tdrawNoDataMessage(g2, dataArea);} \\t\\tif (isRangeCrosshairVisible()) { \\t\\t\\tdrawRangeCrosshair(g2, dataArea, getOrientation(), getRangeCrosshairValue(), getRangeAxis(), getRangeCrosshairStroke(), getRangeCrosshairPaint());} \\t\\tif (getRenderer() != null) { \\t\\t\\tgetRenderer().drawOutline(g2, this, dataArea);} else { \\t\\t\\tdrawOutline(g2, dataArea);}} \\tpublic void drawBackground(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D area) { \\t\\tfillBackground(g2, area, this.orientation); \\t\\tdrawBackgroundImage(g2, area);} \\tprotected java.util.Map drawAxes(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D plotArea, java.awt.geom.Rectangle2D dataArea, org.jfree.chart.plot.PlotRenderingInfo plotState) { \\t\\torg.jfree.chart.axis.AxisCollection axisCollection = new org.jfree.chart.axis.AxisCollection(); \\t\\tfor (int index = 0; index < this.domainAxes.size(); index++) { \\t\\t\\torg.jfree.chart.axis.CategoryAxis xAxis = ((org.jfree.chart.axis.CategoryAxis) (this.domainAxes.get(index))); \\t\\t\\tif (xAxis != null) { \\t\\t\\t\\taxisCollection.add(xAxis, getDomainAxisEdge(index));}} \\t\\tfor (int index = 0; index < this.rangeAxes.size(); index++) { \\t\\t\\torg.jfree.chart.axis.ValueAxis yAxis = ((org.jfree.chart.axis.ValueAxis) (this.rangeAxes.get(index))); \\t\\t\\tif (yAxis != null) { \\t\\t\\t\\taxisCollection.add(yAxis, getRangeAxisEdge(index));}} \\t\\tjava.util.Map axisStateMap = new java.util.HashMap(); \\t\\tdouble cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(dataArea.getHeight()); \\t\\tjava.util.Iterator iterator = axisCollection.getAxesAtTop().iterator(); \\t\\twhile (iterator.hasNext()) { \\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next())); \\t\\t\\tif (axis != null) { \\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, org.jfree.chart.util.RectangleEdge.TOP, plotState); \\t\\t\\t\\tcursor = axisState.getCursor(); \\t\\t\\t\\taxisStateMap.put(axis, axisState);}} \\t\\tcursor = dataArea.getMaxY() + this.axisOffset.calculateBottomOutset(dataArea.getHeight()); \\t\\titerator = axisCollection.getAxesAtBottom().iterator(); \\t\\twhile (iterator.hasNext()) { \\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next())); \\t\\t\\tif (axis != null) { \\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, org.jfree.chart.util.RectangleEdge.BOTTOM, plotState); \\t\\t\\t\\tcursor = axisState.getCursor(); \\t\\t\\t\\taxisStateMap.put(axis, axisState);}} \\t\\tcursor = dataArea.getMinX() - this.axisOffset.calculateLeftOutset(dataArea.getWidth()); \\t\\titerator = axisCollection.getAxesAtLeft().iterator(); \\t\\twhile (iterator.hasNext()) { \\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next())); \\t\\t\\tif (axis != null) { \\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, org.jfree.chart.util.RectangleEdge.LEFT, plotState); \\t\\t\\t\\tcursor = axisState.getCursor(); \\t\\t\\t\\taxisStateMap.put(axis, axisState);}} \\t\\tcursor = dataArea.getMaxX() + this.axisOffset.calculateRightOutset(dataArea.getWidth()); \\t\\titerator = axisCollection.getAxesAtRight().iterator(); \\t\\twhile (iterator.hasNext()) { \\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next())); \\t\\t\\tif (axis != null) { \\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, org.jfree.chart.util.RectangleEdge.RIGHT, plotState); \\t\\t\\t\\tcursor = axisState.getCursor(); \\t\\t\\t\\taxisStateMap.put(axis, axisState);}} \\t\\treturn axisStateMap;} \\tpublic boolean render(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D dataArea, int index, org.jfree.chart.plot.PlotRenderingInfo info) { \\t\\tboolean foundData = false; \\t\\torg.jfree.data.category.CategoryDataset currentDataset = getDataset(index); \\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer renderer = getRenderer(index); \\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(index); \\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(index); \\t\\tboolean hasData = !org.jfree.data.general.DatasetUtilities.isEmptyOrNull(currentDataset); \\t\\tif (hasData && (renderer != null)) { \\t\\t\\tfoundData = true; \\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, this, index, info); \\t\\t\\tint columnCount = currentDataset.getColumnCount(); \\t\\t\\tint rowCount = currentDataset.getRowCount(); \\t\\t\\tint passCount = renderer.getPassCount(); \\t\\t\\tfor (int pass = 0; pass < passCount; pass++) { \\t\\t\\t\\tif (this.columnRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) { \\t\\t\\t\\t\\tfor (int column = 0; column < columnCount; column++) { \\t\\t\\t\\t\\t\\tif (this.rowRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) { \\t\\t\\t\\t\\t\\t\\tfor (int row = 0; row < rowCount; row++) { \\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);}} else { \\t\\t\\t\\t\\t\\t\\tfor (int row = rowCount - 1; row >= 0; row--) { \\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);}}}} else { \\t\\t\\t\\t\\tfor (int column = columnCount - 1; column >= 0; column--) { \\t\\t\\t\\t\\t\\tif (this.rowRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) { \\t\\t\\t\\t\\t\\t\\tfor (int row = 0; row < rowCount; row++) { \\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);}} else { \\t\\t\\t\\t\\t\\t\\tfor (int row = rowCount - 1; row >= 0; row--) { \\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);}}}}}} \\t\\treturn foundData;} \\tprotected void drawDomainGridlines(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D dataArea) { \\t\\tif (isDomainGridlinesVisible()) { \\t\\t\\torg.jfree.chart.axis.CategoryAnchor anchor = getDomainGridlinePosition(); \\t\\t\\torg.jfree.chart.util.RectangleEdge domainAxisEdge = getDomainAxisEdge(); \\t\\t\\tjava.awt.Stroke gridStroke = getDomainGridlineStroke(); \\t\\t\\tjava.awt.Paint gridPaint = getDomainGridlinePaint(); \\t\\t\\tif ((gridStroke != null) && (gridPaint != null)) {\\n\\n","PATCH_DIFF_ORIG":"--- \\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java\\n+++ \\\/source\\\/org\\\/jfree\\\/chart\\\/plot\\\/CategoryPlot.java\\n@@ -2558,5 +2558 @@\\n-\\t\\tboolean b1 = area.getWidth() <= org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW;\\n-\\t\\tboolean b2 = area.getHeight() <= org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW;\\n-\\t\\tif (b1 || b2) {\\n-\\t\\t\\treturn;\\n-\\t\\t}\\n+\\t\\tboolean b1 = \\n@@ -2565 +2560,0 @@\\n-\\t\\tif (state == null) {\\n@@ -2569,3 +2563,0 @@\\n-\\t\\t\\tstate = new org.jfree.chart.plot.PlotRenderingInfo(null);\\n-\\t\\t}\\n-\\t\\tstate.setPlotArea(area);\\n@@ -2574,2 +2565,0 @@\\n-\\t\\torg.jfree.chart.util.RectangleInsets insets = getInsets();\\n-\\t\\tinsets.trim(area);\\n@@ -2578,3 +2567,0 @@\\n-\\t\\torg.jfree.chart.axis.AxisSpace space = calculateAxisSpace(g2, area);\\n-\\t\\tjava.awt.geom.Rectangle2D dataArea = space.shrink(area, null);\\n-\\t\\tthis.axisOffset.trim(dataArea);\\n@@ -2582 +2568,0 @@\\n-\\t\\tstate.setDataArea(dataArea);\\n@@ -2586,6 +2571,0 @@\\n-\\t\\tif (getRenderer() != null) {\\n-\\t\\t\\tgetRenderer().drawBackground(g2, this, dataArea);\\n-\\t\\t} else \\n-\\t\\t{\\n-\\t\\t\\tdrawBackground(g2, dataArea);\\n-\\t\\t}\\n@@ -2593 +2572,0 @@\\n-\\t\\tjava.util.Map axisStateMap = drawAxes(g2, area, dataArea, state);\\n@@ -2596,2 +2574,0 @@\\n-\\t\\tjava.awt.Shape savedClip = g2.getClip();\\n-\\t\\tg2.clip(dataArea);\\n@@ -2599 +2575,0 @@\\n-\\t\\tdrawDomainGridlines(g2, dataArea);\\n@@ -2601,10 +2576,0 @@\\n-\\t\\torg.jfree.chart.axis.AxisState rangeAxisState = ((org.jfree.chart.axis.AxisState) (axisStateMap.get(getRangeAxis())));\\n-\\t\\tif (rangeAxisState == null) {\\n-\\t\\t\\tif (parentState != null) {\\n-\\t\\t\\t\\trangeAxisState = ((org.jfree.chart.axis.AxisState) (parentState.getSharedAxisStates().get(\\n-\\t\\t\\t\\tgetRangeAxis())));\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\tif (rangeAxisState != null) {\\n-\\t\\t\\tdrawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());\\n-\\t\\t}\\n@@ -2613,6 +2578,0 @@\\n-\\t\\tfor (int i = 0; i < this.renderers.size(); i++) {\\n-\\t\\t\\tdrawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);\\n-\\t\\t}\\n-\\t\\tfor (int i = 0; i < this.renderers.size(); i++) {\\n-\\t\\t\\tdrawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);\\n-\\t\\t}\\n@@ -2621 +2580,0 @@\\n-\\t\\tboolean foundData = false;\\n@@ -2624,3 +2582,0 @@\\n-\\t\\tjava.awt.Composite originalComposite = g2.getComposite();\\n-\\t\\tg2.setComposite(java.awt.AlphaComposite.getInstance(\\n-\\t\\tjava.awt.AlphaComposite.SRC_OVER, getForegroundAlpha()));\\n@@ -2628,2 +2583,0 @@\\n-\\t\\torg.jfree.chart.plot.DatasetRenderingOrder order = getDatasetRenderingOrder();\\n-\\t\\tif (order == org.jfree.chart.plot.DatasetRenderingOrder.FORWARD) {\\n@@ -2632,10 +2585,0 @@\\n-\\t\\t\\tint datasetCount = this.datasets.size();\\n-\\t\\t\\tfor (int i = 0; i < datasetCount; i++) {\\n-\\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);\\n-\\t\\t\\t\\tif (r != null) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);\\n-\\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, \\n-\\t\\t\\t\\t\\torg.jfree.chart.util.Layer.BACKGROUND, state);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n@@ -2643,3 +2586,0 @@\\n-\\t\\t\\tfor (int i = 0; i < datasetCount; i++) {\\n-\\t\\t\\t\\tfoundData = render(g2, dataArea, i, state) || foundData;\\n-\\t\\t\\t}\\n@@ -2648,11 +2588,0 @@\\n-\\t\\t\\tfor (int i = 0; i < datasetCount; i++) {\\n-\\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);\\n-\\t\\t\\t\\tif (r != null) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);\\n-\\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, \\n-\\t\\t\\t\\t\\torg.jfree.chart.util.Layer.FOREGROUND, state);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t} else \\n-\\t\\t{\\n@@ -2661,10 +2590,0 @@\\n-\\t\\t\\tint datasetCount = this.datasets.size();\\n-\\t\\t\\tfor (int i = datasetCount - 1; i >= 0; i--) {\\n-\\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);\\n-\\t\\t\\t\\tif (r != null) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);\\n-\\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, \\n-\\t\\t\\t\\t\\torg.jfree.chart.util.Layer.BACKGROUND, state);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n@@ -2672,3 +2591,0 @@\\n-\\t\\t\\tfor (int i = this.datasets.size() - 1; i >= 0; i--) {\\n-\\t\\t\\t\\tfoundData = render(g2, dataArea, i, state) || foundData;\\n-\\t\\t\\t}\\n@@ -2677,10 +2593,0 @@\\n-\\t\\t\\tfor (int i = datasetCount - 1; i >= 0; i--) {\\n-\\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i);\\n-\\t\\t\\t\\tif (r != null) {\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i);\\n-\\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i);\\n-\\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, \\n-\\t\\t\\t\\t\\torg.jfree.chart.util.Layer.FOREGROUND, state);\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n@@ -2689,6 +2595,0 @@\\n-\\t\\tfor (int i = 0; i < this.renderers.size(); i++) {\\n-\\t\\t\\tdrawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.FOREGROUND);\\n-\\t\\t}\\n-\\t\\tfor (int i = 0; i < this.renderers.size(); i++) {\\n-\\t\\t\\tdrawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.FOREGROUND);\\n-\\t\\t}\\n@@ -2697 +2597,0 @@\\n-\\t\\tdrawAnnotations(g2, dataArea, state);\\n@@ -2699,2 +2598,0 @@\\n-\\t\\tg2.setClip(savedClip);\\n-\\t\\tg2.setComposite(originalComposite);\\n@@ -2702,3 +2599,0 @@\\n-\\t\\tif (!foundData) {\\n-\\t\\t\\tdrawNoDataMessage(g2, dataArea);\\n-\\t\\t}\\n@@ -2707 +2601,0 @@\\n-\\t\\tif (isRangeCrosshairVisible()) {\\n@@ -2709,4 +2602,0 @@\\n-\\t\\t\\tdrawRangeCrosshair(g2, dataArea, getOrientation(), \\n-\\t\\t\\tgetRangeCrosshairValue(), getRangeAxis(), \\n-\\t\\t\\tgetRangeCrosshairStroke(), getRangeCrosshairPaint());\\n-\\t\\t}\\n@@ -2715,6 +2604,0 @@\\n-\\t\\tif (getRenderer() != null) {\\n-\\t\\t\\tgetRenderer().drawOutline(g2, this, dataArea);\\n-\\t\\t} else \\n-\\t\\t{\\n-\\t\\t\\tdrawOutline(g2, dataArea);\\n-\\t\\t}\\n@@ -2722 +2605,0 @@\\n-\\t}\\n@@ -2734,4 +2616,0 @@\\n-\\tpublic void drawBackground(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D area) {\\n-\\t\\tfillBackground(g2, area, this.orientation);\\n-\\t\\tdrawBackgroundImage(g2, area);\\n-\\t}\\n@@ -2750,4 +2628,0 @@\\n-\\tprotected java.util.Map drawAxes(java.awt.Graphics2D g2, \\n-\\tjava.awt.geom.Rectangle2D plotArea, \\n-\\tjava.awt.geom.Rectangle2D dataArea, \\n-\\torg.jfree.chart.plot.PlotRenderingInfo plotState) {\\n@@ -2755 +2629,0 @@\\n-\\t\\torg.jfree.chart.axis.AxisCollection axisCollection = new org.jfree.chart.axis.AxisCollection();\\n@@ -2758,6 +2631,0 @@\\n-\\t\\tfor (int index = 0; index < this.domainAxes.size(); index++) {\\n-\\t\\t\\torg.jfree.chart.axis.CategoryAxis xAxis = ((org.jfree.chart.axis.CategoryAxis) (this.domainAxes.get(index)));\\n-\\t\\t\\tif (xAxis != null) {\\n-\\t\\t\\t\\taxisCollection.add(xAxis, getDomainAxisEdge(index));\\n-\\t\\t\\t}\\n-\\t\\t}\\n@@ -2766,6 +2633,0 @@\\n-\\t\\tfor (int index = 0; index < this.rangeAxes.size(); index++) {\\n-\\t\\t\\torg.jfree.chart.axis.ValueAxis yAxis = ((org.jfree.chart.axis.ValueAxis) (this.rangeAxes.get(index)));\\n-\\t\\t\\tif (yAxis != null) {\\n-\\t\\t\\t\\taxisCollection.add(yAxis, getRangeAxisEdge(index));\\n-\\t\\t\\t}\\n-\\t\\t}\\n@@ -2773 +2634,0 @@\\n-\\t\\tjava.util.Map axisStateMap = new java.util.HashMap();\\n@@ -2776,12 +2636,0 @@\\n-\\t\\tdouble cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\\n-\\t\\tdataArea.getHeight());\\n-\\t\\tjava.util.Iterator iterator = axisCollection.getAxesAtTop().iterator();\\n-\\t\\twhile (iterator.hasNext()) {\\n-\\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next()));\\n-\\t\\t\\tif (axis != null) {\\n-\\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \\n-\\t\\t\\t\\torg.jfree.chart.util.RectangleEdge.TOP, plotState);\\n-\\t\\t\\t\\tcursor = axisState.getCursor();\\n-\\t\\t\\t\\taxisStateMap.put(axis, axisState);\\n-\\t\\t\\t}\\n-\\t\\t} \\n@@ -2790,12 +2638,0 @@\\n-\\t\\tcursor = dataArea.getMaxY() + \\n-\\t\\tthis.axisOffset.calculateBottomOutset(dataArea.getHeight());\\n-\\t\\titerator = axisCollection.getAxesAtBottom().iterator();\\n-\\t\\twhile (iterator.hasNext()) {\\n-\\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next()));\\n-\\t\\t\\tif (axis != null) {\\n-\\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \\n-\\t\\t\\t\\torg.jfree.chart.util.RectangleEdge.BOTTOM, plotState);\\n-\\t\\t\\t\\tcursor = axisState.getCursor();\\n-\\t\\t\\t\\taxisStateMap.put(axis, axisState);\\n-\\t\\t\\t}\\n-\\t\\t} \\n@@ -2804,12 +2640,0 @@\\n-\\t\\tcursor = dataArea.getMinX() - \\n-\\t\\tthis.axisOffset.calculateLeftOutset(dataArea.getWidth());\\n-\\t\\titerator = axisCollection.getAxesAtLeft().iterator();\\n-\\t\\twhile (iterator.hasNext()) {\\n-\\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next()));\\n-\\t\\t\\tif (axis != null) {\\n-\\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \\n-\\t\\t\\t\\torg.jfree.chart.util.RectangleEdge.LEFT, plotState);\\n-\\t\\t\\t\\tcursor = axisState.getCursor();\\n-\\t\\t\\t\\taxisStateMap.put(axis, axisState);\\n-\\t\\t\\t}\\n-\\t\\t} \\n@@ -2818,12 +2642,0 @@\\n-\\t\\tcursor = dataArea.getMaxX() + \\n-\\t\\tthis.axisOffset.calculateRightOutset(dataArea.getWidth());\\n-\\t\\titerator = axisCollection.getAxesAtRight().iterator();\\n-\\t\\twhile (iterator.hasNext()) {\\n-\\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next()));\\n-\\t\\t\\tif (axis != null) {\\n-\\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, \\n-\\t\\t\\t\\torg.jfree.chart.util.RectangleEdge.RIGHT, plotState);\\n-\\t\\t\\t\\tcursor = axisState.getCursor();\\n-\\t\\t\\t\\taxisStateMap.put(axis, axisState);\\n-\\t\\t\\t}\\n-\\t\\t} \\n@@ -2831 +2643,0 @@\\n-\\t\\treturn axisStateMap;\\n@@ -2833 +2644,0 @@\\n-\\t}\\n@@ -2846,2 +2656,0 @@\\n-\\tpublic boolean render(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D dataArea, int index, \\n-\\torg.jfree.chart.plot.PlotRenderingInfo info) {\\n@@ -2849,54 +2657,0 @@\\n-\\t\\tboolean foundData = false;\\n-\\t\\torg.jfree.data.category.CategoryDataset currentDataset = getDataset(index);\\n-\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer renderer = getRenderer(index);\\n-\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(index);\\n-\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(index);\\n-\\t\\tboolean hasData = !org.jfree.data.general.DatasetUtilities.isEmptyOrNull(currentDataset);\\n-\\t\\tif (hasData && (renderer != null)) {\\n-\\n-\\t\\t\\tfoundData = true;\\n-\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, \\n-\\t\\t\\tthis, index, info);\\n-\\t\\t\\tint columnCount = currentDataset.getColumnCount();\\n-\\t\\t\\tint rowCount = currentDataset.getRowCount();\\n-\\t\\t\\tint passCount = renderer.getPassCount();\\n-\\t\\t\\tfor (int pass = 0; pass < passCount; pass++) {\\n-\\t\\t\\t\\tif (this.columnRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) {\\n-\\t\\t\\t\\t\\tfor (int column = 0; column < columnCount; column++) {\\n-\\t\\t\\t\\t\\t\\tif (this.rowRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) {\\n-\\t\\t\\t\\t\\t\\t\\tfor (int row = 0; row < rowCount; row++) {\\n-\\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, \\n-\\t\\t\\t\\t\\t\\t\\t\\tdomainAxis, rangeAxis, currentDataset, \\n-\\t\\t\\t\\t\\t\\t\\t\\trow, column, pass);\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\t\\t\\tfor (int row = rowCount - 1; row >= 0; row--) {\\n-\\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, \\n-\\t\\t\\t\\t\\t\\t\\t\\tdomainAxis, rangeAxis, currentDataset, \\n-\\t\\t\\t\\t\\t\\t\\t\\trow, column, pass);\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\tfor (int column = columnCount - 1; column >= 0; column--) {\\n-\\t\\t\\t\\t\\t\\tif (this.rowRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) {\\n-\\t\\t\\t\\t\\t\\t\\tfor (int row = 0; row < rowCount; row++) {\\n-\\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, \\n-\\t\\t\\t\\t\\t\\t\\t\\tdomainAxis, rangeAxis, currentDataset, \\n-\\t\\t\\t\\t\\t\\t\\t\\trow, column, pass);\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t} else \\n-\\t\\t\\t\\t\\t\\t{\\n-\\t\\t\\t\\t\\t\\t\\tfor (int row = rowCount - 1; row >= 0; row--) {\\n-\\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, \\n-\\t\\t\\t\\t\\t\\t\\t\\tdomainAxis, rangeAxis, currentDataset, \\n-\\t\\t\\t\\t\\t\\t\\t\\trow, column, pass);\\n-\\t\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t}\\n-\\t\\t\\t}\\n-\\t\\t}\\n-\\t\\treturn foundData;\\n@@ -2904 +2658,0 @@\\n-\\t}\\n@@ -2914 +2667,0 @@\\n-\\tprotected void drawDomainGridlines(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D dataArea) {\\n@@ -2917,6 +2670,253 @@\\n-\\t\\tif (isDomainGridlinesVisible()) {\\n-\\t\\t\\torg.jfree.chart.axis.CategoryAnchor anchor = getDomainGridlinePosition();\\n-\\t\\t\\torg.jfree.chart.util.RectangleEdge domainAxisEdge = getDomainAxisEdge();\\n-\\t\\t\\tjava.awt.Stroke gridStroke = getDomainGridlineStroke();\\n-\\t\\t\\tjava.awt.Paint gridPaint = getDomainGridlinePaint();\\n-\\t\\t\\tif ((gridStroke != null) && (gridPaint != null)) {\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\trangeGridlinePaint != null; \\t\\tboolean b2 = area.getHeight() <= org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW; \\t\\tif (b1 || b2) { \\t\\t\\treturn;} \\t\\tif (state == null) { \\t\\t\\tstate = new org.jfree.chart.plot.PlotRenderingInfo(null);} \\t\\tstate.setPlotArea(area); \\t\\torg.jfree.chart.util.RectangleInsets insets = getInsets(); \\t\\tinsets.trim(area); \\t\\torg.jfree.chart.axis.AxisSpace space = calculateAxisSpace(g2, area); \\t\\tjava.awt.geom.Rectangle2D dataArea = space.shrink(area, null); \\t\\tthis.axisOffset.trim(dataArea); \\t\\tstate.setDataArea(dataArea); \\t\\tif (getRenderer() != null) { \\t\\t\\tgetRenderer().drawBackground(g2, this, dataArea);} else { \\t\\t\\tdrawBackground(g2, dataArea);} \\t\\tjava.util.Map axisStateMap = drawAxes(g2, area, dataArea, state); \\t\\tjava.awt.Shape savedClip = g2.getClip(); \\t\\tg2.clip(dataArea); \\t\\tdrawDomainGridlines(g2, dataArea); \\t\\torg.jfree.chart.axis.AxisState rangeAxisState = ((org.jfree.chart.axis.AxisState) (axisStateMap.get(getRangeAxis()))); \\t\\tif (rangeAxisState == null) { \\t\\t\\tif (parentState != null) { \\t\\t\\t\\trangeAxisState = ((org.jfree.chart.axis.AxisState) (parentState.getSharedAxisStates().get(getRangeAxis())));}} \\t\\tif (rangeAxisState != null) { \\t\\t\\tdrawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());} \\t\\tfor (int i = 0; i < this.renderers.size(); i++) { \\t\\t\\tdrawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);} \\t\\tfor (int i = 0; i < this.renderers.size(); i++) { \\t\\t\\tdrawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.BACKGROUND);} \\t\\tboolean foundData = false; \\t\\tjava.awt.Composite originalComposite = g2.getComposite(); \\t\\tg2.setComposite(java.awt.AlphaComposite.getInstance(java.awt.AlphaComposite.SRC_OVER, getForegroundAlpha())); \\t\\torg.jfree.chart.plot.DatasetRenderingOrder order = getDatasetRenderingOrder(); \\t\\tif (order == org.jfree.chart.plot.DatasetRenderingOrder.FORWARD) { \\t\\t\\tint datasetCount = this.datasets.size(); \\t\\t\\tfor (int i = 0; i < datasetCount; i++) { \\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i); \\t\\t\\t\\tif (r != null) { \\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i); \\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i); \\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);}} \\t\\t\\tfor (int i = 0; i < datasetCount; i++) { \\t\\t\\t\\tfoundData = render(g2, dataArea, i, state) || foundData;} \\t\\t\\tfor (int i = 0; i < datasetCount; i++) { \\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i); \\t\\t\\t\\tif (r != null) { \\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i); \\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i); \\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);}}} else { \\t\\t\\tint datasetCount = this.datasets.size(); \\t\\t\\tfor (int i = datasetCount - 1; i >= 0; i--) { \\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i); \\t\\t\\t\\tif (r != null) { \\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i); \\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i); \\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.BACKGROUND, state);}} \\t\\t\\tfor (int i = this.datasets.size() - 1; i >= 0; i--) { \\t\\t\\t\\tfoundData = render(g2, dataArea, i, state) || foundData;} \\t\\t\\tfor (int i = datasetCount - 1; i >= 0; i--) { \\t\\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer r = getRenderer(i); \\t\\t\\t\\tif (r != null) { \\t\\t\\t\\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(i); \\t\\t\\t\\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(i); \\t\\t\\t\\t\\tr.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, org.jfree.chart.util.Layer.FOREGROUND, state);}}} \\t\\tfor (int i = 0; i < this.renderers.size(); i++) { \\t\\t\\tdrawDomainMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.FOREGROUND);} \\t\\tfor (int i = 0; i < this.renderers.size(); i++) { \\t\\t\\tdrawRangeMarkers(g2, dataArea, i, org.jfree.chart.util.Layer.FOREGROUND);} \\t\\tdrawAnnotations(g2, dataArea, state); \\t\\tg2.setClip(savedClip); \\t\\tg2.setComposite(originalComposite); \\t\\tif (!foundData) { \\t\\t\\tdrawNoDataMessage(g2, dataArea);} \\t\\tif (isRangeCrosshairVisible()) { \\t\\t\\tdrawRangeCrosshair(g2, dataArea, getOrientation(), getRangeCrosshairValue(), getRangeAxis(), getRangeCrosshairStroke(), getRangeCrosshairPaint());} \\t\\tif (getRenderer() != null) { \\t\\t\\tgetRenderer().drawOutline(g2, this, dataArea);} else { \\t\\t\\tdrawOutline(g2, dataArea);}} \\tpublic void drawBackground(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D area) { \\t\\tfillBackground(g2, area, this.orientation); \\t\\tdrawBackgroundImage(g2, area);} \\tprotected java.util.Map drawAxes(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D plotArea, java.awt.geom.Rectangle2D dataArea, org.jfree.chart.plot.PlotRenderingInfo plotState) { \\t\\torg.jfree.chart.axis.AxisCollection axisCollection = new org.jfree.chart.axis.AxisCollection(); \\t\\tfor (int index = 0; index < this.domainAxes.size(); index++) { \\t\\t\\torg.jfree.chart.axis.CategoryAxis xAxis = ((org.jfree.chart.axis.CategoryAxis) (this.domainAxes.get(index))); \\t\\t\\tif (xAxis != null) { \\t\\t\\t\\taxisCollection.add(xAxis, getDomainAxisEdge(index));}} \\t\\tfor (int index = 0; index < this.rangeAxes.size(); index++) { \\t\\t\\torg.jfree.chart.axis.ValueAxis yAxis = ((org.jfree.chart.axis.ValueAxis) (this.rangeAxes.get(index))); \\t\\t\\tif (yAxis != null) { \\t\\t\\t\\taxisCollection.add(yAxis, getRangeAxisEdge(index));}} \\t\\tjava.util.Map axisStateMap = new java.util.HashMap(); \\t\\tdouble cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(dataArea.getHeight()); \\t\\tjava.util.Iterator iterator = axisCollection.getAxesAtTop().iterator(); \\t\\twhile (iterator.hasNext()) { \\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next())); \\t\\t\\tif (axis != null) { \\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, org.jfree.chart.util.RectangleEdge.TOP, plotState); \\t\\t\\t\\tcursor = axisState.getCursor(); \\t\\t\\t\\taxisStateMap.put(axis, axisState);}} \\t\\tcursor = dataArea.getMaxY() + this.axisOffset.calculateBottomOutset(dataArea.getHeight()); \\t\\titerator = axisCollection.getAxesAtBottom().iterator(); \\t\\twhile (iterator.hasNext()) { \\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next())); \\t\\t\\tif (axis != null) { \\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, org.jfree.chart.util.RectangleEdge.BOTTOM, plotState); \\t\\t\\t\\tcursor = axisState.getCursor(); \\t\\t\\t\\taxisStateMap.put(axis, axisState);}} \\t\\tcursor = dataArea.getMinX() - this.axisOffset.calculateLeftOutset(dataArea.getWidth()); \\t\\titerator = axisCollection.getAxesAtLeft().iterator(); \\t\\twhile (iterator.hasNext()) { \\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next())); \\t\\t\\tif (axis != null) { \\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, org.jfree.chart.util.RectangleEdge.LEFT, plotState); \\t\\t\\t\\tcursor = axisState.getCursor(); \\t\\t\\t\\taxisStateMap.put(axis, axisState);}} \\t\\tcursor = dataArea.getMaxX() + this.axisOffset.calculateRightOutset(dataArea.getWidth()); \\t\\titerator = axisCollection.getAxesAtRight().iterator(); \\t\\twhile (iterator.hasNext()) { \\t\\t\\torg.jfree.chart.axis.Axis axis = ((org.jfree.chart.axis.Axis) (iterator.next())); \\t\\t\\tif (axis != null) { \\t\\t\\t\\torg.jfree.chart.axis.AxisState axisState = axis.draw(g2, cursor, plotArea, dataArea, org.jfree.chart.util.RectangleEdge.RIGHT, plotState); \\t\\t\\t\\tcursor = axisState.getCursor(); \\t\\t\\t\\taxisStateMap.put(axis, axisState);}} \\t\\treturn axisStateMap;} \\tpublic boolean render(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D dataArea, int index, org.jfree.chart.plot.PlotRenderingInfo info) { \\t\\tboolean foundData = false; \\t\\torg.jfree.data.category.CategoryDataset currentDataset = getDataset(index); \\t\\torg.jfree.chart.renderer.category.CategoryItemRenderer renderer = getRenderer(index); \\t\\torg.jfree.chart.axis.CategoryAxis domainAxis = getDomainAxisForDataset(index); \\t\\torg.jfree.chart.axis.ValueAxis rangeAxis = getRangeAxisForDataset(index); \\t\\tboolean hasData = !org.jfree.data.general.DatasetUtilities.isEmptyOrNull(currentDataset); \\t\\tif (hasData && (renderer != null)) { \\t\\t\\tfoundData = true; \\t\\t\\torg.jfree.chart.renderer.category.CategoryItemRendererState state = renderer.initialise(g2, dataArea, this, index, info); \\t\\t\\tint columnCount = currentDataset.getColumnCount(); \\t\\t\\tint rowCount = currentDataset.getRowCount(); \\t\\t\\tint passCount = renderer.getPassCount(); \\t\\t\\tfor (int pass = 0; pass < passCount; pass++) { \\t\\t\\t\\tif (this.columnRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) { \\t\\t\\t\\t\\tfor (int column = 0; column < columnCount; column++) { \\t\\t\\t\\t\\t\\tif (this.rowRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) { \\t\\t\\t\\t\\t\\t\\tfor (int row = 0; row < rowCount; row++) { \\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);}} else { \\t\\t\\t\\t\\t\\t\\tfor (int row = rowCount - 1; row >= 0; row--) { \\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);}}}} else { \\t\\t\\t\\t\\tfor (int column = columnCount - 1; column >= 0; column--) { \\t\\t\\t\\t\\t\\tif (this.rowRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING) { \\t\\t\\t\\t\\t\\t\\tfor (int row = 0; row < rowCount; row++) { \\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);}} else { \\t\\t\\t\\t\\t\\t\\tfor (int row = rowCount - 1; row >= 0; row--) { \\t\\t\\t\\t\\t\\t\\t\\trenderer.drawItem(g2, state, dataArea, this, domainAxis, rangeAxis, currentDataset, row, column, pass);}}}}}} \\t\\treturn foundData;} \\tprotected void drawDomainGridlines(java.awt.Graphics2D g2, java.awt.geom.Rectangle2D dataArea) { \\t\\tif (isDomainGridlinesVisible()) { \\t\\t\\torg.jfree.chart.axis.CategoryAnchor anchor = getDomainGridlinePosition(); \\t\\t\\torg.jfree.chart.util.RectangleEdge domainAxisEdge = getDomainAxisEdge(); \\t\\t\\tjava.awt.Stroke gridStroke = getDomainGridlineStroke(); \\t\\t\\tjava.awt.Paint gridPaint = getDomainGridlinePaint(); \\t\\t\\tif ((gridStroke != null) && (gridPaint != null)) {\\n\\n","Tool":"CARDUMEN"}]}