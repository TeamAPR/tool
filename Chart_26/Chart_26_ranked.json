{
  "patches": [
    {
      "NumOfMut": 1,
      "NumOfDeleteMutations": 1,
      "NumOfInsertMutations": 0,
      "Rank": 1,
      "NumOfReplaceMutations": 0,
      "PatchDiff": "--- \\/source\\/org\\/jfree\\/chart\\/axis\\/Axis.java\\n+++ \\/source\\/org\\/jfree\\/chart\\/axis\\/Axis.java\\n@@ -1113,56 +1112,0 @@\\n-\\t\\tif (edge == org.jfree.chart.util.RectangleEdge.TOP) {\\n-\\t\\t\\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(\\n-\\t\\t\\tgetLabelAngle(), labelBounds.getCenterX(), \\n-\\t\\t\\tlabelBounds.getCenterY());\\n-\\t\\t\\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\\n-\\t\\t\\tlabelBounds = rotatedLabelBounds.getBounds2D();\\n-\\t\\t\\tfloat w = ((float) (labelBounds.getWidth()));\\n-\\t\\t\\tfloat h = ((float) (labelBounds.getHeight()));\\n-\\t\\t\\tfloat labelx = ((float) (dataArea.getCenterX()));\\n-\\t\\t\\tfloat labely = ((float) ((state.getCursor() - insets.getBottom()) - \\n-\\t\\t\\t(h \\/ 2.0)));\\n-\\t\\t\\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, \\n-\\t\\t\\torg.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);\\n-\\t\\t\\thotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w \\/ 2.0F), \\n-\\t\\t\\tlabely - (h \\/ 2.0F), w, h);\\n-\\t\\t\\tstate.cursorUp((insets.getTop() + labelBounds.getHeight()) + \\n-\\t\\t\\tinsets.getBottom());\\n-\\t\\t} else \\n-\\t\\tif (edge == org.jfree.chart.util.RectangleEdge.BOTTOM) {\\n-\\t\\t\\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(\\n-\\t\\t\\tgetLabelAngle(), labelBounds.getCenterX(), \\n-\\t\\t\\tlabelBounds.getCenterY());\\n-\\t\\t\\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\\n-\\t\\t\\tlabelBounds = rotatedLabelBounds.getBounds2D();\\n-\\t\\t\\tfloat w = ((float) (labelBounds.getWidth()));\\n-\\t\\t\\tfloat h = ((float) (labelBounds.getHeight()));\\n-\\t\\t\\tfloat labelx = ((float) (dataArea.getCenterX()));\\n-\\t\\t\\tfloat labely = ((float) ((state.getCursor() + insets.getTop()) + \\n-\\t\\t\\t(h \\/ 2.0)));\\n-\\t\\t\\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, \\n-\\t\\t\\torg.jfree.chart.text.TextAnchor.CENTER, getLabelAngle(), org.jfree.chart.text.TextAnchor.CENTER);\\n-\\t\\t\\thotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w \\/ 2.0F), \\n-\\t\\t\\tlabely - (h \\/ 2.0F), w, h);\\n-\\t\\t\\tstate.cursorDown((insets.getTop() + labelBounds.getHeight()) + \\n-\\t\\t\\tinsets.getBottom());\\n-\\t\\t} else \\n-\\t\\tif (edge == org.jfree.chart.util.RectangleEdge.LEFT) {\\n-\\t\\t\\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(\\n-\\t\\t\\tgetLabelAngle() - (java.lang.Math.PI \\/ 2.0), labelBounds.getCenterX(), \\n-\\t\\t\\tlabelBounds.getCenterY());\\n-\\t\\t\\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\\n-\\t\\t\\tlabelBounds = rotatedLabelBounds.getBounds2D();\\n-\\t\\t\\tfloat w = ((float) (labelBounds.getWidth()));\\n-\\t\\t\\tfloat h = ((float) (labelBounds.getHeight()));\\n-\\t\\t\\tfloat labelx = ((float) ((state.getCursor() - insets.getRight()) - \\n-\\t\\t\\t(w \\/ 2.0)));\\n-\\t\\t\\tfloat labely = ((float) (dataArea.getCenterY()));\\n-\\t\\t\\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, \\n-\\t\\t\\torg.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() - (java.lang.Math.PI \\/ 2.0), \\n-\\t\\t\\torg.jfree.chart.text.TextAnchor.CENTER);\\n-\\t\\t\\thotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w \\/ 2.0F), \\n-\\t\\t\\tlabely - (h \\/ 2.0F), w, h);\\n-\\t\\t\\tstate.cursorLeft((insets.getLeft() + labelBounds.getWidth()) + \\n-\\t\\t\\tinsets.getRight());\\n-\\t\\t} else \\n-\\t\\tif (edge == org.jfree.chart.util.RectangleEdge.RIGHT) {\\n@@ -1170,18 +1113,0 @@\\n-\\t\\t\\tjava.awt.geom.AffineTransform t = java.awt.geom.AffineTransform.getRotateInstance(\\n-\\t\\t\\tgetLabelAngle() + (java.lang.Math.PI \\/ 2.0), \\n-\\t\\t\\tlabelBounds.getCenterX(), labelBounds.getCenterY());\\n-\\t\\t\\tjava.awt.Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\\n-\\t\\t\\tlabelBounds = rotatedLabelBounds.getBounds2D();\\n-\\t\\t\\tfloat w = ((float) (labelBounds.getWidth()));\\n-\\t\\t\\tfloat h = ((float) (labelBounds.getHeight()));\\n-\\t\\t\\tfloat labelx = ((float) ((state.getCursor() + \\n-\\t\\t\\tinsets.getLeft()) + (w \\/ 2.0)));\\n-\\t\\t\\tfloat labely = ((float) (dataArea.getY() + (dataArea.getHeight() \\/ \\n-\\t\\t\\t2.0)));\\n-\\t\\t\\torg.jfree.chart.text.TextUtilities.drawRotatedString(label, g2, labelx, labely, \\n-\\t\\t\\torg.jfree.chart.text.TextAnchor.CENTER, getLabelAngle() + (java.lang.Math.PI \\/ 2.0), \\n-\\t\\t\\torg.jfree.chart.text.TextAnchor.CENTER);\\n-\\t\\t\\thotspot = new java.awt.geom.Rectangle2D.Float(labelx - (w \\/ 2.0F), \\n-\\t\\t\\tlabely - (h \\/ 2.0F), w, h);\\n-\\t\\t\\tstate.cursorRight((insets.getLeft() + labelBounds.getWidth()) + \\n-\\t\\t\\tinsets.getRight());\\n@@ -1189 +1115,75 @@\\n-\\t\\t}\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n\\n",
      "Tool": "jGenProg"
    },
    {
      "NumOfMut": 1,
      "NumOfDeleteMutations": 1,
      "NumOfInsertMutations": 0,
      "Rank": 2,
      "NumOfReplaceMutations": 0,
      "PatchDiff": "--- \\/source\\/org\\/jfree\\/chart\\/axis\\/Axis.java\\n+++ \\/source\\/org\\/jfree\\/chart\\/axis\\/Axis.java\\n@@ -1190,8 +1190,8 @@\\n-\\t\\tif ((plotState != null) && (hotspot != null)) {\\n-\\t\\t\\torg.jfree.chart.ChartRenderingInfo owner = plotState.getOwner();\\n-\\t\\t\\torg.jfree.chart.entity.EntityCollection entities = owner.getEntityCollection();\\n-\\t\\t\\tif (entities != null) {\\n-\\t\\t\\t\\tentities.add(new org.jfree.chart.entity.AxisLabelEntity(this, hotspot, \\n-\\t\\t\\t\\tthis.labelToolTip, this.labelURL));\\n-\\t\\t\\t}\\n-\\t\\t}\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n\\n",
      "Tool": "jGenProg"
    }
  ]
}
